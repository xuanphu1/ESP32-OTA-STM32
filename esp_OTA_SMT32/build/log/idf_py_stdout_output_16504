[1/12] Building C object esp-idf/hostBootloader/CMakeFiles/__idf_hostBootloader.dir/hostBootloader_command.c.obj
D:/esp/esp_OTA_SMT32/component/hostBootloader/hostBootloader_command.c: In function 'host_bootLoader_handle':
D:/esp/esp_OTA_SMT32/component/hostBootloader/hostBootloader_command.c:65:13: warning: unused variable 'len' [-Wunused-variable]
   65 |     uint8_t len = 0 ;
      |             ^~~
[2/12] Linking C static library esp-idf\hostBootloader\libhostBootloader.a
[3/12] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\esp\esp_OTA_SMT32\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/esp/esp_OTA_SMT32/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[4/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/esp_OTA_SMT32.c.obj
[5/10] Linking C static library esp-idf\main\libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable esp_OTA_SMT32.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.dev4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/esp/esp_OTA_SMT32/build/esp_OTA_SMT32.bin
[9/10] cmd.exe /C "cd /D D:\esp\esp_OTA_SMT32\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/esp/esp_OTA_SMT32/build/partition_table/partition-table.bin D:/esp/esp_OTA_SMT32/build/esp_OTA_SMT32.bin"
esp_OTA_SMT32.bin binary size 0x30d00 bytes. Smallest app partition is 0x100000 bytes. 0xcf300 bytes (81%) free.
[9/10] cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.3\components\esptool_py && C:\Espressif\tools\cmake\3.2esptool.py --chip esp32 -p COM4 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 esp_OTA_SMT32.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev4
Serial port COM4
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: d4:d4:da:e3:d0:54
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00040fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 26752 bytes to 16358...
Writing at 0x00001000... (100 %)
Wrote 26752 bytes (16358 compressed) at 0x00001000 in 0.9 seconds (effective 244.7 kbit/s)...
Hash of data verified.
Compressed 199936 bytes to 106805...
Writing at 0x00010000... (14 %)
Writing at 0x0001cecb... (28 %)
Writing at 0x000229de... (42 %)
Writing at 0x00028af7... (57 %)
Writing at 0x0002f57b... (71 %)
Writing at 0x00037719... (85 %)
Writing at 0x0003da53... (100 %)
Wrote 199936 bytes (106805 compressed) at 0x00010000 in 2.6 seconds (effective 621.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 341.2 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
4.0\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.3 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.3_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.3/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=D:/esp/esp_OTA_SMT32/build -P C:/Espressif/frameworks/esp-idf-v5.3/components/esptool_py/run_serial_tool.cmake"
